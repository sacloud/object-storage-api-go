openapi: 3.0.0
info:
  version: 1.0.0
  title: さくらのオブジェクトストレージ APIドキュメント
  license:
    name: Copyright(C) 2021 SAKURA internet Inc. all rights reserved.
  x-logo:
    url: logo.svg
    altText: さくらのオブジェクトストレージ：APIドキュメント
  description: |-

    ---

    「さくらのオブジェクトストレージ」が提供するAPIの利用方法とサンプルを公開しております。

    # 基本的な使い方

    ## APIキーの発行

    APIを利用するためには、認証のための「APIキー」が必要です。事前にキーを発行しておきます。
    APIキーは「ユーザーID」「パスワード」に相当する「トークン」と呼ばれる認証情報で構成されています。

    |   項目名   | APIキー発行時の項目名        | このドキュメント内での例             |
    |------------|------------------------------|--------------------------------------|
    | ユーザーID | アクセストークン(UUID)       | 01234567-89ab-cdef-0123-456789abcdef |
    | パスワード | アクセストークンシークレット | SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM |

    <div class="warning">
    <b>操作マニュアル</b><br />
    <ul><li><a href="https://manual.sakura.ad.jp/cloud/api/apikey.html">APIキー | さくらのクラウド ドキュメント</a></li></ul>
    </div>

    ## 入力パラメータ

    APIの入力には送信先URLに対して、いくつかのヘッダーとAPIキーを送信します。

    * APIのURLは以下の2つが存在します。※ 各APIの使い分けは後述します。
      * `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/(エンドポイント)`
      * `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/(エンドポイント)`
    * 認証方式はHTTP Basic認証です。APIキーのアクセストークンをユーザーID、アクセストークンシークレットをパスワードとして指定します。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         'https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/clusters'
    ```

    ## 出力結果と応答コード（HTTPステータスコード）

    APIからの結果は、「応答コード（HTTPステータスコード）」と、「JSON形式(UTF-8)の結果」として出力されます。

    応答コードは、リクエストが成功したのか、失敗したのか大まかな情報を判断することができるもので、例えば失敗したときには、なぜこのような結果になったのかなど、具体的な情報は応答コードと主に返された本文を見ることで把握することができます。

    | 結果                                | 応答コード/status   |
    |-------------------------------------|---------------------|
    | 成功（要求を受け付けた）             | 2xx                 |
    | 失敗（要求が受け付けられなかった）  | 4xx, 5xx            |

    ```
    # 出力結果サンプル（レスポンスヘッダ）
    HTTP/1.1 200 OK
    Server: nginx
    Date: Tue, 16 Nov 2021 12:39:48 GMT
    Content-Type: application/json; charset=UTF-8
    Content-Length: 443
    Connection: keep-alive
    Status: 200 OK
    Pragma: no-cache
    Cache-Control: no-cache
    X-Sakura-Proxy-Microtime: 66245
    X-Sakura-Proxy-Decode-Microtime: 62
    X-Sakura-Content-Length: 443
    X-Sakura-Serial: 86ab6c743f72aa5ea6f17e254fd5f803
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    X-Frame-Options: DENY
    X-Sakura-Encode-Microtime: 260
    Vary: Accept-Encoding
    ```

    ```
    # 出力結果サンプル（レスポンスボディー）
    {
      "error": {
        "code": 404,
        "errors": [
          {
            "domain": "fed.objectstorage.sacloud",
            "location": "clusters",
            "location_type": "path_parameter",
            "message": "Cluster was not found",
            "reason": "not_found"
          }
        ],
        "message": "Cluster was not found",
        "trace_id": "0f36837633984f3fc8871f515e8efa24"
      }
    }
    ```

    # 利用例

    ## 1.接続先サイト一覧の取得

    さくらのオブジェクトストレージを利用するには、まずバケット作成先となる**サイト**を取得・選択します。

    サイト一覧を取得するには、以下のような入力を行います。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         'https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/clusters'
    ```

    実行結果として、サイトのリストが返却されます。

    ```
    # 出力結果サンプル
    {
      "data": [
        {
          "api_zone": [],
          "control_panel_url": "https://secure.sakura.ad.jp/objectstorage/",
          "dislpay_name_en_us": "Ishikari Site #1",
          "dislpay_name_ja": "石狩第1サイト",
          "display_name": "石狩第1サイト",
          "display_order": 1,
          "endpoint_base": "isk01.sakurastorage.jp",
          "id": "isk01",
          "s3_endpoint": "s3.isk01.sakurastorage.jp",
          "s3_endpoint_for_control_panel": "s3.cp.isk01.sakurastorage.jp",
          "storage_zone": []
        }
      ]
    }
    ```

    得られたサイトID（上記の`id`フィールド）を確認します。これは後続の利用例で使用します。

    ## 2.サイトアカウントの作成

    上記のサイトから利用したいサイトIDを選択し（ここではisk01を選択することにします）、**サイトアカウント**を作成します。

    サイトアカウントとは、サイトを利用するための独立したアカウントであり、サイトアカウント作成・削除による料金の発生はございません。
    なお、すでにサイトアカウントを作成済みの場合は、再度サイトアカウントの作成は不要です。

    サイトアカウントを作成するには以下のような入力を行います。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X POST \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/account
    ```

    サイトアカウントの作成が完了すると、選択したサイトにて

    * バケットの作成・削除
    * アクセスキーの発行・削除
    * パーミッションキーの発行・削除

    などの操作が可能になります。

    ## 3.バケットの作成・削除

    選択したサイトにてサイトアカウントを作成後、**バケット**の作成・削除が可能です。

    バケットを作成するには以下のような入力を行います。    
    この時、選択したサイト（ここではisk01とします）をリクエストボディーに入れ、作成したいバケット名をパスパラメータに入れる必要があります。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X PUT \
         -d '{"cluster_id": "isk01"}' \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/buckets/sample
    ```

    上記で作成したバケットを削除するには以下のような入力を行います。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X DELETE \
         -d '{"cluster_id": "isk01"}' \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/buckets/sample
    ```

    ## 4.アクセスキーの発行・削除

    選択したサイトにてサイトアカウントを作成後、**アクセスキー**の発行・削除が可能です。

    アクセスキーを発行するには以下のような入力を行います。    

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X POST \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/account/keys
    ```

    コマンド結果には以下のフィールドが含まれます。

    * `created_at` : 作成日時
    * `id` : アクセスキーID
    * `secret` : シークレットアクセスキー

    ```
    # 出力結果サンプル
    {
      "data": {
        "created_at": "2021-11-04T07:42:41.121418479Z",
        "id": "XPJK4SC9883N91RHR253",
        "secret": "jqRaUo5l+EiEYqP8wos9exbmFfq4/vG8CLPYI2XN"
      }
    }
    ```

    上記で作成したアクセスキーを削除するには以下のような入力を行います。    
    この時、削除したいアクセスキーIDをパスパラメータに入れる必要があります。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X DELETE \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/account/keys/XPJK4SC9883N91RHR253
    ```

    ## 5.パーミッション及びパーミッションアクセスキーの発行・削除

    選択したサイトにてサイトアカウントを作成後且つバケットが1つ以上ある場合、**パーミッション**の発行・削除が可能です。

    パーミッションを作成するには以下のような入力を行います。
    この時、パーミッション名、パーミッションで制御したいバケットとそれに対する操作をリクエストボディーに入れる必要があります。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X POST \
         -d '{"display_name": "sample_permission", "bucket_controls": [{"bucket_name": "sample", "can_read": true, "can_write": true}]}' \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/permissions
    ```

    作成が完了すると、パーミッションIDが含まれたレスポンスを受け取ります。
    ```
    # 出力サンプル
    {
      "data":{
        "bucket_controls":[
          {
            "bucket_name":"sample",
            "can_read":true,
            "can_write":true,
            "created_at":"2021-11-11T13:36:08.767118492Z"
          }
        ],
        "created_at":"2021-11-11T13:36:08.690384415Z",
        "display_name":"sample_permission",
        "id":619
      }
    }
    ```

    このパーミッションのアクセスキーを発行するには以下のような入力を行います。
    この時、パーミッション作成時に発行されたID（ここでは619とします）をパスパラメータに含める必要があります。

    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X POST \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/permissions/619/keys
    ```

    コマンド結果には以下のフィールドが含まれます。

    * `created_at` : 作成日時
    * `id` : アクセスキーID
    * `secret` : シークレットアクセスキー

    ```
    # 出力結果サンプル
    {
      "data": {
        "created_at": "2021-11-04T07:42:41.121418479Z",
        "id": "XPJK4SC9883N91RHR253",
        "secret": "jqRaUo5l+EiEYqP8wos9exbmFfq4/vG8CLPYI2XN"
      }
    }
    ```

    パーミッションアクセスキーを削除するには以下のような入力を行います。
    この時、パーミッションアクセスキー発行時に出力されたIDをパスパラメータに含める必要があります。
    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X DELETE \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/permissions/619/keys/XPJK4SC9883N91RHR253
    ```

    パーミッションを削除するには以下のような入力を行います。
    この時、パーミッション作成時に発行されたID（ここでは619とします）をパスパラメータに含める必要があります。
    ```
    # 入力サンプル
    curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
         -X DELETE \
         https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/isk01/v2/permissions/619
    ```
    ----

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
paths:
  /fed/v1/clusters:
    get:
      operationId: "ListClusters"
      tags:
        - サイト
      summary: サイト一覧の取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/clusters` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/clusters`
        となります。
      responses:
        '200':
          description: サイト一覧の取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
  '/fed/v1/clusters/{site_id}':
    get:
      operationId: "ReadCluster"
      tags:
        - サイト
      summary: サイトの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/clusters` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/clusters`
        となります。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '200':
          description: サイトの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadClusterResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: サイトが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
  '/fed/v1/buckets/{bucket_name}':
    put:
      operationId: "CreateBucket"
      tags:
        - バケット
      summary: バケットの作成
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/clusters` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/clusters`
        となります。
      parameters:
        - in: path
          name: bucket_name
          required: true
          schema:
            $ref: '#/components/schemas/BucketName'
          description: バケット名
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBucketRequestBody'
        description: 作成したいバケット情報
        required: true
      responses:
        '201':
          description: バケット作成に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBucketResponseBody'
        '400':
          description: バケット名が不正です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '404':
          description: サイトアカウントが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '409':
          description: 同名バケットがすでに存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
    delete:
      operationId: "DeleteBucket"
      tags:
        - バケット
      servers:
        - url: 'https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/'
      summary: バケットの削除
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/clusters` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/fed/v1/clusters`
        となります。
      parameters:
        - in: path
          name: bucket_name
          required: true
          schema:
            $ref: '#/components/schemas/BucketName'
          description: バケット名
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBucketRequestBody'
        description: 作成したいバケット情報
        required: true
      responses:
        '204':
          description: バケット削除に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBucketResponseBody'
        '400':
          description: バケット名が不正です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '409':
          description: バケットに関係するリソースが残っています、先にそれらのリソースを削除する必要があります
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
  '/{site_id}/v2/account':
    get:
      operationId: "ReadSiteAccount"
      tags:
        - サイトアカウント
      summary: サイトアカウントの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '200':
          description: サイトアカウントの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: サイトアカウントが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    post:
      operationId: "CreateSiteAccount"
      tags:
        - サイトアカウント
      summary: サイトアカウントの作成
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '201':
          description: サイトアカウントの作成に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: 新規のサイトアカウント作成が拒否されました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        '409':
          description: サイトアカウントはすでに作成済みです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    delete:
      operationId: "DeleteSiteAccount"
      tags:
        - サイトアカウント
      summary: サイトアカウントの削除
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '204':
          description: サイトアカウントの削除に成功しました
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '409':
          description: サイトアカウントに関係するリソースが残っています、先にそれらのリソースを削除する必要があります
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/account/keys':
    get:
      operationId: "ListAccountAccessKeys"
      tags:
        - サイトアカウント
      summary: サイトアカウントのアクセスキーの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '200':
          description: サイトアカウントのアクセスキーの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeysResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: サイトアカウントが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    post:
      operationId: "CreateAccountAccessKey"
      tags:
        - サイトアカウント
      servers:
        - url: 'https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/{site_id}/v2/'
      summary: サイトアカウントのアクセスキーの発行
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '201':
          description: サイトアカウントのアクセスキーの発行に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeyResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: サイトアカウントが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '409':
          description: サイトアカウントのアクセスキーが上限に達しています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/account/keys/{account_key_id}':
    get:
      operationId: "ReadAccountAccessKey"
      tags:
        - サイトアカウント
      summary: サイトアカウントのアクセスキーの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: account_key_id
          schema:
            $ref: '#/components/schemas/AccessKeyID'
          required: true
          description: アクセスキーID
      responses:
        '200':
          description: サイトアカウントのアクセスキーの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeyResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: アクセスキーが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    delete:
      operationId: "DeleteAccountAccessKey"
      tags:
        - サイトアカウント
      summary: サイトアカウントのアクセスキーの削除
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: account_key_id
          schema:
            $ref: '#/components/schemas/AccessKeyID'
          required: true
          description: アクセスキーID
      responses:
        '204':
          description: サイトアカウントのアクセスキーの削除に成功しました
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/permissions':
    get:
      operationId: "ListPermissions"
      tags:
        - パーミッション
      summary: パーミッション一覧の取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '200':
          description: パーミッション一覧の取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    post:
      operationId: "CreatePermission"
      tags:
        - パーミッション
      summary: パーミッションの作成
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      requestBody:
        description: どのバケットを制御するかを定義します。
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequestBody'
      responses:
        '201':
          description: パーミッションの作成に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: あなたが所有者でない、または存在しないバケットが指定されています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '409':
          description: 制御対象のバケットの数が上限を超えています。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/permissions/{permission_id}':
    get:
      operationId: "ReadPermission"
      tags:
        - パーミッション
      summary: パーミッションの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
      responses:
        '200':
          description: パーミッションの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: パーミッションが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    put:
      operationId: "UpdatePermission"
      tags:
        - パーミッション
      summary: パーミッションの更新
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。

        **注意**： 本APIは指定したパーミッションIDの内容を全て置き換えます。
        そのため、一部のバケットの権限を変更したい場合であっても、本パーミッションIDが管理する全てのバケットに関する情報も合わせて送る必要があります。

        例えば、パーミッションID`1`が管理するバケットが下記の内容であるとします（パーミッションID`1`をGETした際の内容を示しています）。
        ```
        {
          "data": {
            "bucket_controls": [
              {
                "bucket_name": "your-bucket-name-001",
                "can_read": false,
                "can_write": false,
                "created_at": "2021-01-01T12:59:59.371074+09:00"
              },
              {
                "bucket_name": "your-bucket-name-002",
                "can_read": false,
                "can_write": false,
                "created_at": "2021-01-01T12:59:59.371074+09:00"
              }
            ]
            "created_at": "2021-01-01T12:59:59.371074+09:00"
            "display_name": "your-permission-001",
            "id": 1
          },
        }
        ```
        この内、`your-bucket-name-002`の読み込み及び書き込み権限だけを許可したい場合は下記のようなリクエストボディーを送る必要があります。
        ```
        {
          "id": 1,
          "display_name": "your-permission-001",
          "bucket_controls": [
            {
              "bucket_name": "your-bucket-name-001",
              "can_read": false,
              "can_write": false,
            },
            {
              "bucket_name": "your-bucket-name-002",
              "can_read": true,
              "can_write": true,
            }
          ]
        }
        ```

        実際にリクエストを送る際には上記の内容を`data.json`というファイルに保存し、以下のような入力を行います。
        ```
        # 入力サンプル
        curl -u '01234567-89ab-cdef-0123-456789abcdef:SAMPLETOKENSAMPLETOKENSAMPLETOKENSAM' \
             -X PUT \
             -d @data.json \
        https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/permissions/1
        ```
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
      requestBody:
        description: どのバケットを制御するかを定義します。
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequestBody'
      responses:
        '200':
          description: パーミッションの更新に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: あなたが所有者でない、または存在しないバケットが指定されています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '409':
          description: 制御対象のバケットの数が上限を超えています。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    delete:
      operationId: "DeletePermission"
      tags:
        - パーミッション
      summary: パーミッションの削除
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
      responses:
        '204':
          description: パーミッションの削除に成功しました
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/permissions/{permission_id}/keys':
    get:
      operationId: "ListPermissionAccessKeys"
      tags:
        - パーミッション
      summary: パーミッションが保有するアクセスキー一覧の取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
      responses:
        '200':
          description: パーミッションが保有するアクセスキー一覧の取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionKeysResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: パーミッションが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    post:
      operationId: "CreatePermissionAccessKey"
      tags:
        - パーミッション
      summary: パーミッションのアクセスキーの発行
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
      responses:
        '201':
          description: パーミッションのアクセスキーの発行に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionKeyResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: パーミッションが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '409':
          description: 制御対象のバケットの数が上限を超えています。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/permissions/{permission_id}/keys/{permission_key_id}':
    get:
      operationId: "ReadPermissionAccessKey"
      tags:
        - パーミッション
      summary: パーミッションが保有するアクセスキーの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
        - name: permission_key_id
          in: path
          schema:
            $ref: "#/components/schemas/AccessKeyID"
          required: true
          description: パーミッションが保有するアクセスキーID
      responses:
        '200':
          description: パーミッションが保有するアクセスキーの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionKeyResponseBody'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: パーミッションが保有するアクセスキーが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
    delete:
      operationId: "DeletePermissionAccessKey"
      tags:
        - パーミッション
      summary: パーミッションが保有するアクセスキーの削除
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
        - in: path
          name: permission_id
          schema:
            $ref: "#/components/schemas/PermissionID"
          required: true
          description: パーミッションID
        - name: permission_key_id
          in: path
          schema:
            $ref: "#/components/schemas/AccessKeyID"
          required: true
          description: パーミッションが保有するアクセスキーID
      responses:
        '204':
          description: パーミッションが保有するアクセスキーの削除に成功しました
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '404':
          description: パーミッションが保有するアクセスキーが見つかりませんでした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
  '/{site_id}/v2/status':
    get:
      operationId: "ReadSiteStatus"
      tags:
        - ステータス
      summary: サイトのステータスの取得
      description: |-
        アクセス先ベースURL: `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/`

        上記アクセス先ベースURLと右ペインのパスを組み合わせたものがアクセス先URLになります。
        例えば、右ペインのパスが `/account` の場合、アクセス先URLは、
        `https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0/（サイト名）/v2/account`
        となります。

        なお、サイト名の取得方法は「利用例＞接続先サイト一覧の取得」をご参考下さい。
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
          description: サイト名
      responses:
        '200':
          description: サイトのステータスの取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          description: 認証に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        default:
          description: 不明なエラーです
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
servers:
  - url: 'https://secure.sakura.ad.jp/cloud/zone/is1a/api/objectstorage/1.0'
components:
  securitySchemes:
    Account_api_key:
      type: http
      scheme: basic
      description: |-
        [クラウドコントロールパネル](https://secure.sakura.ad.jp/cloud/)で発行したAPIキーを利用します。

         `アクセストークン(UUID)` を「ユーザーID」、`アクセストークンシークレット` を「パスワード」として指定します。
  schemas:
    # Note: handler.PutBucketReqBodyからリネーム
    CreateBucketRequestBody:
      type: object
      required:
        - cluster_id
      properties:
        cluster_id:
          type: string
    # Note: handler.getClusterResからリネーム
    ReadClusterResponseBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Cluster'
    # Note: handler.listClustersResからリネーム
    ListClustersResponseBody:
      type: object
      properties:
        data:
          description: 'If use a pointer type, braek output'
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
      required:
        - data
    # Note: handler.putBucketRes:
    CreateBucketResponseBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Bucket'
      required:
        - data
    # Note: Accountからの分離
    AccountResponseBody:
      description: Account info
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Account'
      required:
        - data

    # Note: accountKeysからリネーム
    AccountKeysResponseBody:
      description: Root user access keys
      type: object
      properties:
        data:
          description: data type
          type: array
          items:
            $ref: "#/components/schemas/AccountKey"
      required:
        - data
    # Note: accountKeyからリネーム
    AccountKeyResponseBody:
      description: Root user access key
      type: object
      properties:
        data:
          $ref: "#/components/schemas/AccountKey"
      required:
        - data

    # Note: PermissionsとPermissionに分離
    PermissionsResponseBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Permissions'
      required:
        - data
    PermissionResponseBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Permission'
      required:
        - data

    # Note: PermissionKeyから分離
    PermissionKeyResponseBody:
      description: data type
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PermissionKey'
      required:
        - data

    # Note: PermissionKeyから分離
    PermissionKeysResponseBody:
      description: data type
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PermissionKeys'
      required:
        - data

    # Note: model.Bucketからリネーム
    Bucket:
      type: object
      properties:
        cluster_id:
          type: string
        name:
          type: string
      required:
        - cluster_id
        - name
    # Note: model.Clusterからリネーム
    Cluster:
      type: object
      properties:
        api_zone:
          description: API Servers Zones
          type: array
          items:
            type: string
          example:
            - is1b
        control_panel_url:
          description: URL of Control Panel
          type: string
          example: secure.sakura.ad.jp/objectstorage/isk01
        dislpay_name_en_us:
          description: Display Name (en-us)
          type: string
          example: 'Ishikari Cluster #1'
        dislpay_name_ja:
          description: Display Name (ja)
          type: string
          example: 石狩第1サイト
        display_name:
          description: Display Name (Depending on Accept-Language)
          type: string
          example: 石狩第1サイト
        display_order:
          description: Display Order (Can be ignored)
          type: integer
          example: 1
        endpoint_base:
          description: Endpoint Base of Cluster
          type: string
          example: isk01.objectstorage.sakurastorage.jp
        iam_endpoint:
          description: URL of IAM-compat API
          type: string
          example: iam.isk01.objectstorage.sakurastorage.jp
        iam_endpoint_for_control_panel:
          description: URL of IAM-compat API (w/ resigning)
          type: string
          example: iam.cp.isk01.objectstorage.sakurastorage.jp
        id:
          type: string
          example: isk01
        s3_endpoint:
          description: URL of S3-compat API
          type: string
          example: s3.isk01.objectstorage.sakurastorage.jp
        s3_endpoint_for_control_panel:
          description: URL of S3-compat API (w/ resigning)
          type: string
          example: s3.cp.isk01.objectstorage.sakurastorage.jp
        storage_zone:
          description: Storage Servers Zones
          type: array
          items:
            type: string
          example:
            - is1a
            - is1b
      required:
        - api_zone
        - control_panel_url
        - dislpay_name_en_us
        - dislpay_name_ja
        - display_name
        - display_order
        - endpoint_base
        - iam_endpoint
        - iam_endpoint_for_control_panel
        - id
        - s3_endpoint
        - s3_endpoint_for_control_panel
        - storage_zone
    #    model.HTTPErr:
#      type: object
#      properties:
#        error:
#          $ref: '#/components/schemas/model.HTTPErrDoc'
#    model.HTTPErrDoc:
#      type: object
#      properties:
#        code:
#          type: integer
#          example: 429
#        errors:
#          type: array
#          items:
#            $ref: '#/components/schemas/model.InnerErr'
#        message:
#          type: string
#          example: Rate Limit Exceeded
#        trace_id:
#          description: X-Sakura-Internal-Serial-ID
#          type: string
#          example: 0f36837633984f3fc8871f515e8efa24
#    model.InnerErr:
#      type: object
#      properties:
#        domain:
#          description: 'global, usage,...'
#          type: string
#          example: usage
#        location:
#          description: 'Authorization, {paramName},...'
#          type: string
#        location_type:
#          description: 'header, parameter,...'
#          type: string
#        message:
#          description: '{description}'
#          type: string
#          example: Rate Limit Exceeded
#        reason:
#          description: 'invalidParameter, required,...'
#          type: string
#          example: rateLimitExceeded
    PermissionID:
      description: Permission ID
      type: integer
      format: int64
      example: 123
    ResourceID:
      description: Resource ID
      type: string
      pattern: '\d{1,12}'
      example: '123456789012'
    Code:
      description: Code
      type: string
      pattern: ^[\w@]+$
      example: abc01234@foo@isk01
    CreatedAt:
      description: Created at
      type: string
      format: date-time
      example: '2020-01-11T01:11:23.123456+09:00'
    BucketName:
      description: Bucket name
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9]{2,}'
      example: Abcdefg1235-
    CanRead:
      description: The flag to read bucket contents
      type: boolean
      example: true
    CanWrite:
      description: The flag to write bucket contents
      type: boolean
      example: true
    DisplayName:
      description: Display name
      type: string
      pattern: ^.+$
      example: abc012345-
    AccessKeyID:
      description: Access key ID
      type: string
      pattern: '^[\w\d\/]{1,40}$'
      example: abcdefABCDEF0123456789
    SecretAccessKey:
      description: Secret Access key
      type: string
      pattern: '^[\w\d\/=]{40}$'
      example: '==NOTICE==EXISTS/ONLY/WHEN/JUST/CREATED='
    AccountKey:
      description: Root user access key
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccessKeyID'
        secret:
          $ref: '#/components/schemas/SecretAccessKey'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      required:
        - id
        - secret
        - created_at

    # Note: BucketControlsとBucketControlに分離
    BucketControls:
      description: Bucket controls
      type: array
      items:
        $ref: '#/components/schemas/BucketControl'

    # Note: BucketControlsとBucketControlに分離
    BucketControl:
      description: Bucket control
      type: object
      properties:
        bucket_name:
          $ref: '#/components/schemas/BucketName'
        can_read:
          $ref: '#/components/schemas/CanRead'
        can_write:
          $ref: '#/components/schemas/CanWrite'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      required:
        - bucket_name
        - can_read
        - can_write
        - created_at

    PermissionSecret:
      description: Permission secret key
      type: string
      pattern: '^[\w\d\/=]{40}$'
      example: '==NOTICE==EXISTS/ONLY/WHEN/JUST/CREATED='
#    BucketGrantFullControl:
#      description: Bucket Grant Full Control
#      type: string
#      pattern: '^[\w\d_-]+$'
#      example: grantfullControl

    # Note: ResponseBody+Accountに分離させた
    Account:
      description: Account info
      type: object
      properties:
        resource_id:
          $ref: '#/components/schemas/ResourceID'
        code:
          $ref: '#/components/schemas/Code'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      required:
        - resource_id
        - code
        - created_at

#    BucketGrantRead:
#      description: Bucket Grant Read
#      type: boolean
#      example: true
#    BucketGrantReadAcp:
#      description: Bucket Grant Read ACP
#      type: string
#      example: Bucket Grant Read ACP
#    BucketGrantWrite:
#      description: Bcuket Grant Write
#      type: boolean
#      example: true
#    BucketGrantWriteAcp:
#      description: Bucket Grant Write ACP
#      type: string
#      example: Bucket Grant Write ACP
#    BucketBody:
#      description: Request body for bucket
#      type: object
#      properties:
#        acl:
#          type: string
#          example: |
#            {
#              "Owner": {
#                "DisplayName": "123456789012",
#                "ID": "abcdefABCDEF0123456789"
#              },
#              "Grants": [
#                {
#                  "Grantee": {
#                    "DisplayName": "113100030424",
#                    "ID": "abcedefABCDEF0123456789",
#                    "Type": "CanonicalUser"
#                  },
#                  "Permission": "FULL_CONTROL"
#                }
#              ]
#            }
#        grant_full_control:
#          allOf:
#            - $ref: '#/components/schemas/BucketGrantFullControl'
#        grant_read:
#          allOf:
#            - $ref: '#/components/schemas/BucketGrantRead'
#        grnat_read_acp:
#          allOf:
#            - $ref: '#/components/schemas/BucketGrantReadAcp'
#        grant_write:
#          allOf:
#            - $ref: '#/components/schemas/BucketGrantWrite'
#        grant_write_acp:
#          allOf:
#            - $ref: '#/components/schemas/BucketGrantWriteAcp'
#    Bucket:
#      description: Bucket
#      type: object
#      properties:
#        data:
#          type: object
#          properties:
#            name:
#              allOf:
#                - $ref: '#/components/schemas/BucketName'
#            resource_id:
#              allOf:
#                - $ref: '#/components/schemas/ResourceID'
#    BucketForGetACL:
#      description: Bucket
#      type: object
#      properties:
#        data:
#          description: data type
#          type: object
#          properties:
#            owner:
#              type: object
#              properties:
#                id:
#                  type: string
#                  example: '123456789012'
#                display_name:
#                  type: string
#                  example: display_name
#            grants:
#              type: array
#              items:
#                type: object
#                properties:
#                  grantee:
#                    type: object
#                    properties:
#                      id:
#                        type: string
#                        example: abcedefABCDEF0123456789
#                      display_name:
#                        type: string
#                        example: '113100030424'
#                      type:
#                        type: string
#                        example: CanonicalUser
#                      uri:
#                        type: string
#                        example: uri
#                  permission:
#                    type: string
#                    example: permission

    # Note: Permissions/Permission/Permission[s]ResponseBodyに分離
    Permissions:
      description: Permissions
      type: array
      items:
        $ref: '#/components/schemas/Permission'

    # Note: Permissions/Permission/Permission[s]ResponseBodyに分離
    Permission:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PermissionID'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        bucket_controls:
          $ref: '#/components/schemas/BucketControls'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      required:
        - id
        - display_name
        - bucket_controls
        - created_at

    # Note: PermissionBucketControlsBodyからリネーム
    PermissionRequestBody:
      description: Request body for bucket controls for Permission
      type: object
      properties:
        display_name:
          $ref: '#/components/schemas/DisplayName'
        bucket_controls:
          $ref: '#/components/schemas/BucketControls'
      required:
        - display_name
        - bucket_controls


    # Note: PermissionKeyから分離
    PermissionKeys:
      description: Permission Keys
      type: array
      items:
        $ref: '#/components/schemas/PermissionKey'

    # Note: PermissionKey[s]ResponseBodyを切り出し
    PermissionKey:
      description: Permission Key
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccessKeyID'
        secret:
          $ref: '#/components/schemas/PermissionSecret'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      required:
        - id
        - secret
        - created_at

#    Session:
#      description: Session
#      type: object
#      properties:
#        data:
#          type: object
#          properties:
#            access_key_id:
#              type: string
#              example: abcdefABCDEF0123456789
#            access_key_secret:
#              type: string
#              pattern: '^[\w\d\/]{1,40}$'
#              example: abcdefABCDEF0123456789
#            user:
#              type: string
#              example: user_name
#            created_at:
#              allOf:
#                - $ref: '#/components/schemas/CreatedAt'
#            expired_at:
#              type: string
#              format: date-time
#              example: '2021-01-11T01:11:23.123456+09:00'
#    SessionBody:
#      description: Session body
#      type: object
#      properties:
#        expires_at:
#          type: string
#          format: date-time
#          example: '2020-01-11T01:11:23.123456+09:00'
#        token:
#          type: string
#          example: abcdefABCDEF0123456789
#        user:
#          type: string
#          example: user_name
    Status:
      description: Status
      type: object
      properties:
        data:
          description: data type
          type: object
          properties:
            accept_new:
              type: boolean
              example: true
            message:
              type: string
              example: some extra info
            started_at:
              type: string
              format: date-time
              example: '2020-01-11T01:11:23.123456+09:00'
            status_code:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                status:
                  type: string
                  example: available
    ErrorCode:
      description: |
        エラーコード。
      type: integer
      format: int32
    ErrorMessage:
      description: |
        エラー発生時のメッセージ内容。  
        このメッセージはエラーを発生させたアプリケーションのメッセージをそのまま含む場合がある。
      type: string
    ErrorTraceId:
      description: |
        X-Sakura-Internal-Serial-ID
      type: string
    ErrorsDomain:
      description: |
        どのサービスで発生したエラーかを判別する。  
        マイクロサービス名に加えてクラスター名を含む文字列が入ることを想定している。
      type: string
    ErrorsLocation:
      description: |
        エラー発生箇所。  
        どのリソースなのか（どのリソースを操作した時に発生したものなのか）、
        どのパラメータなのかといった情報。
      type: string
    ErrorsLocationType:
      description: |
        エラーの発生箇所の種類。  
        HTTPヘッダなのかHTTPパラメータなのか、
        S3バケットなのかといったlocationの種別情報。
      type: string
    ErrorsMessage:
      description: |
        エラー発生時のメッセージ内容。  
        このメッセージはエラーを発生させたアプリケーションのメッセージをそのまま含む場合がある。
      type: string
    ErrorsReason:
      description: |
        なぜそのエラーが発生したかがわかる情報。  
        エラーメッセージの原因やエラー解決のためのヒントも含む場合がある。
      type: string
    Errors:
      description: |
        認証に関するエラーについて詳細なエラー内容を表示する。
      type: array
      items:
        $ref: "#/components/schemas/Error"

    # Errorsから切り出し
    Error:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/ErrorsDomain'
        location:
          $ref: '#/components/schemas/ErrorsLocation'
        location_type:
          $ref: '#/components/schemas/ErrorsLocationType'
        message:
          $ref: '#/components/schemas/ErrorsMessage'
        reason:
          $ref: '#/components/schemas/ErrorsReason'
      required:
        - domain
        - location
        - location_type
        - message
        - reason
    Error400:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorDetail"
      required:
        - error
    Error401:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorDetail"
      required:
        - error
    Error403:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorDetail"
      required:
        - error
    Error404:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorDetail"
      required:
        - error
    Error409:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorDetail"
      required:
        - error
    ErrorDefault:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorDetail"
      required:
        - error

    # ErrorNNNから切り出し
    ErrorDetail:
      description: error
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          $ref: '#/components/schemas/ErrorMessage'
        trace_id:
          $ref: '#/components/schemas/ErrorTraceId'
        errors:
          $ref: '#/components/schemas/Errors'
      required:
        - code
        - message
        - trace_id
        - errors
