// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package v1

import (
	"time"
)

// AccessKeyID Access key ID
type AccessKeyID string

// Account Account info
type Account struct {
	// Code Code
	Code Code `json:"code"`

	// CreatedAt Created at
	CreatedAt CreatedAt `json:"created_at"`

	// ResourceId Resource ID
	ResourceId ResourceID `json:"resource_id"`
}

// AccountKey Root user access key
type AccountKey struct {
	// CreatedAt Created at
	CreatedAt CreatedAt `json:"created_at"`

	// Id Access key ID
	Id AccessKeyID `json:"id"`

	// Secret Secret Access key
	Secret SecretAccessKey `json:"secret"`
}

// AccountKeyResponseBody Root user access key
type AccountKeyResponseBody struct {
	// Data Root user access key
	Data AccountKey `json:"data"`
}

// AccountKeysResponseBody Root user access keys
type AccountKeysResponseBody struct {
	// Data data type
	Data []AccountKey `json:"data"`
}

// AccountResponseBody Account info
type AccountResponseBody struct {
	// Data Account info
	Data Account `json:"data"`
}

// Bucket defines model for Bucket.
type Bucket struct {
	ClusterId string `json:"cluster_id"`
	Name      string `json:"name"`
}

// BucketControl Bucket control
type BucketControl struct {
	// BucketName Bucket name
	BucketName BucketName `json:"bucket_name"`

	// CanRead The flag to read bucket contents
	CanRead CanRead `json:"can_read"`

	// CanWrite The flag to write bucket contents
	CanWrite CanWrite `json:"can_write"`

	// CreatedAt Created at
	CreatedAt CreatedAt `json:"created_at"`
}

// BucketControls Bucket controls
type BucketControls []BucketControl

// BucketName Bucket name
type BucketName string

// CanRead The flag to read bucket contents
type CanRead bool

// CanWrite The flag to write bucket contents
type CanWrite bool

// Cluster defines model for Cluster.
type Cluster struct {
	// ApiZone API Servers Zones
	ApiZone []string `json:"api_zone"`

	// ControlPanelUrl URL of Control Panel
	ControlPanelUrl string `json:"control_panel_url"`

	// DisplayName Display Name (Depending on Accept-Language)
	DisplayName string `json:"display_name"`

	// DisplayNameEnUs Display Name (en-us)
	DisplayNameEnUs string `json:"display_name_en_us"`

	// DisplayNameJa Display Name (ja)
	DisplayNameJa string `json:"display_name_ja"`

	// DisplayOrder Display Order (Can be ignored)
	DisplayOrder int `json:"display_order"`

	// EndpointBase Endpoint Base of Cluster
	EndpointBase string `json:"endpoint_base"`

	// IamEndpoint URL of IAM-compat API
	IamEndpoint string `json:"iam_endpoint"`

	// IamEndpointForControlPanel URL of IAM-compat API (w/ resigning)
	IamEndpointForControlPanel string `json:"iam_endpoint_for_control_panel"`
	Id                         string `json:"id"`

	// S3Endpoint URL of S3-compat API
	S3Endpoint string `json:"s3_endpoint"`

	// S3EndpointForControlPanel URL of S3-compat API (w/ resigning)
	S3EndpointForControlPanel string `json:"s3_endpoint_for_control_panel"`

	// StorageZone Storage Servers Zones
	StorageZone []string `json:"storage_zone"`
}

// Code Code
type Code string

// CreateBucketRequestBody defines model for CreateBucketRequestBody.
type CreateBucketRequestBody struct {
	ClusterId string `json:"cluster_id"`
}

// CreateBucketResponseBody defines model for CreateBucketResponseBody.
type CreateBucketResponseBody struct {
	Data Bucket `json:"data"`
}

// CreatedAt Created at
type CreatedAt time.Time

// DisplayName Display name
type DisplayName string

// Error defines model for Error.
type Error struct {
	// Domain どのサービスで発生したエラーかを判別する。
	// マイクロサービス名に加えてクラスター名を含む文字列が入ることを想定している。
	Domain ErrorsDomain `json:"domain"`

	// Location エラー発生箇所。
	// どのリソースなのか（どのリソースを操作した時に発生したものなのか）、
	// どのパラメータなのかといった情報。
	Location ErrorsLocation `json:"location"`

	// LocationType エラーの発生箇所の種類。
	// HTTPヘッダなのかHTTPパラメータなのか、
	// S3バケットなのかといったlocationの種別情報。
	LocationType ErrorsLocationType `json:"location_type"`

	// Message エラー発生時のメッセージ内容。
	// このメッセージはエラーを発生させたアプリケーションのメッセージをそのまま含む場合がある。
	Message ErrorsMessage `json:"message"`

	// Reason なぜそのエラーが発生したかがわかる情報。
	// エラーメッセージの原因やエラー解決のためのヒントも含む場合がある。
	Reason ErrorsReason `json:"reason"`
}

// Error400 defines model for Error400.
type Error400 struct {
	// Detail error
	Detail ErrorDetail `json:"error"`
}

// Error401 defines model for Error401.
type Error401 struct {
	// Detail error
	Detail ErrorDetail `json:"error"`
}

// Error403 defines model for Error403.
type Error403 struct {
	// Detail error
	Detail ErrorDetail `json:"error"`
}

// Error404 defines model for Error404.
type Error404 struct {
	// Detail error
	Detail ErrorDetail `json:"error"`
}

// Error409 defines model for Error409.
type Error409 struct {
	// Detail error
	Detail ErrorDetail `json:"error"`
}

// ErrorCode エラーコード。
type ErrorCode int32

// ErrorDefault defines model for ErrorDefault.
type ErrorDefault struct {
	// Detail error
	Detail ErrorDetail `json:"error"`
}

// ErrorDetail error
type ErrorDetail struct {
	// Code エラーコード。
	Code ErrorCode `json:"code"`

	// Errors 認証に関するエラーについて詳細なエラー内容を表示する。
	Errors Errors `json:"errors"`

	// Message エラー発生時のメッセージ内容。
	// このメッセージはエラーを発生させたアプリケーションのメッセージをそのまま含む場合がある。
	Message ErrorMessage `json:"message"`

	// TraceId X-Sakura-Internal-Serial-ID
	TraceId ErrorTraceId `json:"trace_id"`
}

// ErrorMessage エラー発生時のメッセージ内容。
// このメッセージはエラーを発生させたアプリケーションのメッセージをそのまま含む場合がある。
type ErrorMessage string

// ErrorTraceId X-Sakura-Internal-Serial-ID
type ErrorTraceId string

// Errors 認証に関するエラーについて詳細なエラー内容を表示する。
type Errors []Error

// ErrorsDomain どのサービスで発生したエラーかを判別する。
// マイクロサービス名に加えてクラスター名を含む文字列が入ることを想定している。
type ErrorsDomain string

// ErrorsLocation エラー発生箇所。
// どのリソースなのか（どのリソースを操作した時に発生したものなのか）、
// どのパラメータなのかといった情報。
type ErrorsLocation string

// ErrorsLocationType エラーの発生箇所の種類。
// HTTPヘッダなのかHTTPパラメータなのか、
// S3バケットなのかといったlocationの種別情報。
type ErrorsLocationType string

// ErrorsMessage エラー発生時のメッセージ内容。
// このメッセージはエラーを発生させたアプリケーションのメッセージをそのまま含む場合がある。
type ErrorsMessage string

// ErrorsReason なぜそのエラーが発生したかがわかる情報。
// エラーメッセージの原因やエラー解決のためのヒントも含む場合がある。
type ErrorsReason string

// ListClustersResponseBody defines model for ListClustersResponseBody.
type ListClustersResponseBody struct {
	// Data If use a pointer type, braek output
	Data []Cluster `json:"data"`
}

// Permission defines model for Permission.
type Permission struct {
	// BucketControls Bucket controls
	BucketControls BucketControls `json:"bucket_controls"`

	// CreatedAt Created at
	CreatedAt CreatedAt `json:"created_at"`

	// DisplayName Display name
	DisplayName DisplayName `json:"display_name"`

	// Id Permission ID
	Id PermissionID `json:"id"`
}

// PermissionID Permission ID
type PermissionID int64

// PermissionKey Permission Key
type PermissionKey struct {
	// CreatedAt Created at
	CreatedAt CreatedAt `json:"created_at"`

	// Id Access key ID
	Id AccessKeyID `json:"id"`

	// Secret Permission secret key
	Secret PermissionSecret `json:"secret"`
}

// PermissionKeyResponseBody data type
type PermissionKeyResponseBody struct {
	// Data Permission Key
	Data PermissionKey `json:"data"`
}

// PermissionKeys Permission Keys
type PermissionKeys []PermissionKey

// PermissionKeysResponseBody data type
type PermissionKeysResponseBody struct {
	// Data Permission Keys
	Data PermissionKeys `json:"data"`
}

// PermissionRequestBody Request body for bucket controls for Permission
type PermissionRequestBody struct {
	// BucketControls Bucket controls
	BucketControls BucketControls `json:"bucket_controls"`

	// DisplayName Display name
	DisplayName DisplayName `json:"display_name"`
}

// PermissionResponseBody defines model for PermissionResponseBody.
type PermissionResponseBody struct {
	Data Permission `json:"data"`
}

// PermissionSecret Permission secret key
type PermissionSecret string

// Permissions Permissions
type Permissions []Permission

// PermissionsResponseBody defines model for PermissionsResponseBody.
type PermissionsResponseBody struct {
	// Data Permissions
	Data Permissions `json:"data"`
}

// ReadClusterResponseBody defines model for ReadClusterResponseBody.
type ReadClusterResponseBody struct {
	Data *Cluster `json:"data,omitempty"`
}

// ResourceID Resource ID
type ResourceID string

// SecretAccessKey Secret Access key
type SecretAccessKey string

// Status data type
type Status struct {
	AcceptNew  bool       `json:"accept_new"`
	Message    string     `json:"message"`
	StartedAt  time.Time  `json:"started_at"`
	StatusCode StatusCode `json:"status_code"`
}

// StatusCode defines model for StatusCode.
type StatusCode struct {
	Id     int    `json:"id"`
	Status string `json:"status"`
}

// StatusResponseBody Status
type StatusResponseBody struct {
	// Data data type
	Data Status `json:"data"`
}

// DeleteBucketJSONRequestBody defines body for DeleteBucket for application/json ContentType.
type DeleteBucketJSONRequestBody CreateBucketRequestBody

// CreateBucketJSONRequestBody defines body for CreateBucket for application/json ContentType.
type CreateBucketJSONRequestBody CreateBucketRequestBody

// CreatePermissionJSONRequestBody defines body for CreatePermission for application/json ContentType.
type CreatePermissionJSONRequestBody PermissionRequestBody

// UpdatePermissionJSONRequestBody defines body for UpdatePermission for application/json ContentType.
type UpdatePermissionJSONRequestBody PermissionRequestBody
